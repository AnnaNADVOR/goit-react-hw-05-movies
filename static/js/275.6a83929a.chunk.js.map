{"version":3,"file":"static/js/275.6a83929a.chunk.js","mappings":"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","sources":["components/Error/Error.styled.jsx","components/Error/Eror.jsx","components/Loader/Loader.jsx","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","components/Notification/Notification.jsx","constants/STATUS.js","components/Searchbar/Searchbar.jsx","pages/Movies.jsx","services/api.js"],"sourcesContent":["import styled from '@emotion/styled' \n\nexport const ErrorContainer = styled.div`\n    display:flex; \n    flex-direction: column;\n    align-items: center; \n    text-align: center;\n    justify-content: center;\n    padding: 60px; \n    font-size: 30px; \n    font-weight: 500;\n    color: ${({ theme }) => theme.colors.darkbue};\n    \n\n    &>svg {\n        width: 80px; \n        height: 80px; \n        margin-bottom: 20px;\n        fill: ${({ theme }) => theme.colors.accentColor};\n    }\n\n`","import { PiMaskSadDuotone } from \"react-icons/pi\";\nimport {ErrorContainer} from './Error.styled'\n\nfunction Error({ children }) {\n    return (\n        <ErrorContainer>\n            <PiMaskSadDuotone />\n            {children}\n        </ErrorContainer>\n    )\n}\n\nexport default Error;","import {ThreeDots } from 'react-loader-spinner';\n\nfunction Loader() {\n    return (                \n        <ThreeDots color=\"#c24d2c\"/>    \n    )\n}\n\nexport default Loader;","import { Link } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\nfunction MoviesListItem ({ title, id }) {\n    const location = useLocation();\n    return (\n        <li>\n            <Link to={`/movies/${id}`} state={{ from: location }}>{title}</Link> \n        </li>\n    )\n}\n\nexport default MoviesListItem; ","import MoviesListItem from \"../MoviesListItem/MoviesListItem\";\n\nfunction MoviesList({movies}) {\n    return (\n        <ul>\n            {movies.map(({id, title}) => <MoviesListItem\n                key={id}\n                title={title}\n                id={id}\n                />)}\n        </ul>\n    )\n}\n\nexport default MoviesList; ","import { PiMaskSadDuotone } from \"react-icons/pi\";\n\nfunction Notification({ children }) {\n    return (\n        <div>\n            <PiMaskSadDuotone />\n            {children}\n        </div>\n    )\n}\n\nexport default  Notification;","export const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n}\n\nexport default STATUS;\n\n","import { useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { BiSearchAlt } from \"react-icons/bi\";\nfunction Searchbar({ submit }) {\n  \n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? '';\n    const [searchQuery, setSearchQuery] = useState(query);\n    \n    const onFormSubmit =  (event) => {\n        event.preventDefault();\n        setSearchParams({ query: searchQuery});\n        submit(searchQuery);    \n      \n    }\n\n    const onInputChange = (event)=> {\n        const normaliseQuery = event.currentTarget.value.toLocaleLowerCase().trim();\n        setSearchQuery(normaliseQuery);\n    }\n\n    return (\n        <form onSubmit={onFormSubmit}>\n            <input type=\"text\"\n                onChange={onInputChange}\n                value={searchQuery}\n                placeholder=\"Search movies\"/>\n            <button type=\"submit\">\n                <BiSearchAlt />\n            </button>        \n        </form>        \n    )\n}\n\nexport default Searchbar;","import Searchbar from \"components/Searchbar/Searchbar\";\nimport { getMoviesByKeyword } from \"services/api\";\nimport { useSearchParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport Error from \"components/Error/Eror\";\nimport STATUS from \"constants/STATUS\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\nimport Loader from \"components/Loader/Loader\";\nimport Notification from \"components/Notification/Notification\";\n\n\nfunction Movies() {\n\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? '';\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState('');\n    const [status, setStatus] = useState(STATUS.IDLE);\n    \n    useEffect(() => {\n        if (query === '') {\n            return;\n        }\n        setStatus(STATUS.PENDING);\n        getMoviesByKeyword(query).then(data => {               \n            setMovies(data.results);\n            setStatus(STATUS.RESOLVED);            \n        }).catch(error => { \n            setError('Oops! Something went wrong. Try again.');\n            setStatus(STATUS.REJECTED); \n        })}, [query]);\n\n    const getQuery = (value) => {\n        setSearchParams({ query: value });\n    }\n\n    return (\n        <>\n        <Searchbar submit={getQuery} />\n            {status === STATUS.RESOLVED && (movies.length ? (<MoviesList movies={movies} />) : (<Notification>No items found! Enter other serch therm.</Notification>)) }\n            {status === STATUS.REJECTED && <Error>{error}</Error>} \n            {status === STATUS.PENDING && <Loader/>} \n        </>   \n    )    \n}\n\nexport default Movies; ","const API_KEY = '8ee92906979787c07710c6746d1a8fbe';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport function getTrendingMovies() {\n    return  fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.json())\n}\n\nexport function getDetails(id) {\n    return fetch(`${BASE_URL}/movie/${id}?language=en-US&api_key=${API_KEY}`)\n    .then(response => response.json())\n}\n\nexport function getCast(id) {\n    return fetch(`${BASE_URL}/movie/${id}/credits?language=en-US&api_key=${API_KEY}`)\n    .then(response => response.json())\n}\n\nexport function getReviews(id) {\n    return fetch(`${BASE_URL}/movie/${id}/reviews?language=en-US&api_key=${API_KEY}`)\n    .then(response => response.json())\n}\n\nexport function getMoviesByKeyword(searchQuery) {\n    return fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`)\n        .then(response => response.json())\n  \n}"],"names":["ErrorContainer","styled","_templateObject","_taggedTemplateLiteral","_ref","theme","colors","darkbue","_ref2","accentColor","children","_jsxs","_jsx","PiMaskSadDuotone","ThreeDots","color","title","id","location","useLocation","Link","to","concat","state","from","movies","map","MoviesListItem","IDLE","PENDING","RESOLVED","REJECTED","_searchParams$get","submit","_useSearchParams","useSearchParams","_useSearchParams2","_slicedToArray","searchParams","setSearchParams","query","get","_useState","useState","_useState2","searchQuery","setSearchQuery","onSubmit","event","preventDefault","type","onChange","normaliseQuery","currentTarget","value","toLocaleLowerCase","trim","placeholder","BiSearchAlt","setMovies","_useState3","_useState4","error","setError","_useState5","STATUS","_useState6","status","setStatus","useEffect","getMoviesByKeyword","then","data","results","catch","_Fragment","Searchbar","length","MoviesList","Notification","Error","Loader","API_KEY","BASE_URL","getTrendingMovies","fetch","response","json","getDetails","getCast","getReviews"],"sourceRoot":""}