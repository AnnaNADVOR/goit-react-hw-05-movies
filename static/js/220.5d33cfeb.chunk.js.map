{"version":3,"file":"static/js/220.5d33cfeb.chunk.js","mappings":"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","sources":["components/CastListItem/CastListItem.styled.jsx","components/CastListItem/CastListItem.jsx","components/CastList/CastList.styled.jsx","components/CastList/CastList.jsx","components/Error/Error.styled.jsx","components/Error/Eror.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/Notification/Notification.styled.jsx","components/Notification/Notification.jsx","constants/STATUS.js","services/api.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ActorCard = styled.li`\n    width: 250px;\n    box-shadow: 0px 4px 4px rgba(0,0,0,.15);\n    border-radius:4px;\n\n    &>img{\n        width:250px; \n        height:350px;\n        object-fit: cover;       \n    }\n`\nexport const ActorInfo = styled.div`\n    padding: 20px 24px;\n    text-align: center; \n    color:${({ theme }) => theme.colors.darkblue};   \n`\nexport const ActorName = styled.h3`\n    font-size: 20px;\n    font-weight: 600;\n    margin-bottom: 10px;\n`\nexport const InfoText = styled.p`\n    font-size: 16px;\n\n    &>span{\n        font-weight: 600;\n        margin-right: 5px;\n    }\n`\n\n\n","import defaultImg from 'not-found.jpg'\nimport {\n    ActorCard,\n    ActorInfo,\n    ActorName,\n    InfoText,\n} from './CastListItem.styled';\n\nfunction CastListItem({ character, name, profile_path}) {\n    const avatar = `https://image.tmdb.org/t/p/w200/${profile_path}`;\n    return (\n        <ActorCard>\n            <img src={profile_path ? avatar : defaultImg} alt={name} width=\"200\" /> \n            <ActorInfo>\n                <ActorName>{name}</ActorName>\n                <InfoText><span>Character:</span>{character}</InfoText>\n            </ActorInfo>\n        </ActorCard>\n    )    \n}\n\nexport default CastListItem; ","import styled from '@emotion/styled';\n\nexport const Cast = styled.ul`\n    list-style: none; \n    display: flex;\n    flex-wrap: wrap; \n    gap:30px;\n    margin-top:40px;\n    justify-content: space-evenly;\n   \n`","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { getCast } from \"services/api\";\nimport STATUS from \"constants/STATUS\";\nimport Error from \"components/Error/Eror\";\nimport Loader from \"components/Loader/Loader\";\nimport Notification from \"components/Notification/Notification\";\nimport CastListItem from \"components/CastListItem/CastListItem\";\n\nimport {\n    Cast,\n} from \"./CastList.styled\";\n\nfunction CastList() {\n    const { movieId } = useParams(); \n    const [cast, setCast] = useState([]);\n    const [status, setStatus] = useState(STATUS.IDLE); \n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        setStatus(STATUS.PENDING)\n        getCast(movieId).then(data => {\n            setCast(data.cast);\n            setStatus(STATUS.RESOLVED);\n        }).catch(error => {\n            setError('Oops! Something went wrong. Try again.');\n            setStatus(STATUS.REJECTED);\n        })\n    }, [movieId])\n    \n    if (status === STATUS.RESOLVED) {\n        return (\n            <>\n                {cast.length ?\n                    <Cast>\n                        {cast.map(({cast_id, character, name, profile_path}) => \n                            <CastListItem \n                                key={cast_id}\n                                character={character}\n                                name={name}\n                                profile_path={profile_path} />\n                        )}             \n                    </Cast> \n                : <Notification>Sorry! We don't have cast information for this movie.</Notification>} \n            </>\n        )\n    }\n   \n    if (status === STATUS.PENDING) {\n        return <Loader/>\n    }\n\n    if (status === STATUS.REJECTED) {\n        return <Error>{error}</Error>\n    }\n}\n\nexport default CastList; ","import styled from '@emotion/styled' \n\nexport const ErrorContainer = styled.div`\n    display:flex; \n    flex-direction: column;\n    align-items: center; \n    text-align: center;\n    justify-content: center;\n    padding: 60px; \n    font-size: 30px; \n    font-weight: 500;\n    color: ${({ theme }) => theme.colors.darkbue};\n    \n\n    &>svg {\n        width: 80px; \n        height: 80px; \n        margin-bottom: 20px;\n        fill: ${({ theme }) => theme.colors.accentColor};\n    }\n\n`","import { PiMaskSadDuotone } from \"react-icons/pi\";\nimport {ErrorContainer} from './Error.styled'\n\nfunction Error({ children }) {\n    return (\n        <ErrorContainer>\n            <PiMaskSadDuotone />\n            {children}\n        </ErrorContainer>\n    )\n}\n\nexport default Error;","import styled from '@emotion/styled';\n\nexport const LoaderContainer = styled.div`\n    display:flex; \n    flex-direction: column;\n    align-items: center; \n    text-align: center;\n    justify-content: center;\n    padding: 60px; \n    color: ${({ theme }) => theme.colors.darkblue};\n        \n    &>svg {\n        margin-bottom: 20px;              \n    }\n\n`\nexport const Info = styled.p`\n    font-size: 20px; \n    text-align: center;    \n`","import {ThreeDots } from 'react-loader-spinner';\nimport {\n    LoaderContainer,\n    Info,\n} from './Loader.styled';\nfunction Loader() {\n    return (\n        <LoaderContainer>\n            <ThreeDots color='#c24d2c'/> \n            <Info>Soon...</Info>\n        </LoaderContainer>\n      \n        \n    )\n}\n\nexport default Loader;","import styled from '@emotion/styled';\n\nexport const NotificationContainer = styled.div`\n    display:flex; \n    flex-direction: column;\n    align-items: center; \n    text-align: center;\n    justify-content: center;\n    padding: 60px; \n    font-size: 30px; \n    font-weight: 500;\n    color: ${({ theme }) => theme.colors.darkbue};\n\n     &>svg {\n        width: 80px; \n        height: 80px; \n        margin-bottom: 20px;\n        fill: ${({ theme }) => theme.colors.accentColor};\n    }\n`","import { PiMaskSadDuotone } from \"react-icons/pi\";\nimport { NotificationContainer } from \"./Notification.styled\";\n\nfunction Notification({ children }) {\n    return (\n        <NotificationContainer>\n            <PiMaskSadDuotone />\n            {children}\n        </NotificationContainer>\n    )\n}\n\nexport default  Notification;","export const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n}\n\nexport default STATUS;\n\n","const API_KEY = '8ee92906979787c07710c6746d1a8fbe';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport function getTrendingMovies() {\n    return  fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.json())\n}\n\nexport function getDetails(id) {\n    return fetch(`${BASE_URL}/movie/${id}?language=en-US&api_key=${API_KEY}`)\n    .then(response => response.json())\n}\n\nexport function getCast(id) {\n    return fetch(`${BASE_URL}/movie/${id}/credits?language=en-US&api_key=${API_KEY}`)\n    .then(response => response.json())\n}\n\nexport function getReviews(id) {\n    return fetch(`${BASE_URL}/movie/${id}/reviews?language=en-US&api_key=${API_KEY}`)\n    .then(response => response.json())\n}\n\nexport function getMoviesByKeyword(searchQuery) {\n    return fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`)\n        .then(response => response.json())\n  \n}"],"names":["ActorCard","styled","_templateObject","_taggedTemplateLiteral","ActorInfo","_templateObject2","_ref","theme","colors","darkblue","ActorName","_templateObject3","InfoText","_templateObject4","character","name","profile_path","avatar","concat","_jsxs","children","_jsx","src","defaultImg","alt","width","Cast","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","STATUS","_useState4","status","setStatus","_useState5","_useState6","error","setError","useEffect","getCast","then","data","catch","_Fragment","length","map","cast_id","CastListItem","Notification","Loader","Error","ErrorContainer","darkbue","_ref2","accentColor","PiMaskSadDuotone","LoaderContainer","Info","ThreeDots","color","NotificationContainer","IDLE","PENDING","RESOLVED","REJECTED","API_KEY","BASE_URL","getTrendingMovies","fetch","response","json","getDetails","id","getReviews","getMoviesByKeyword","searchQuery"],"sourceRoot":""}