{"version":3,"file":"static/js/452.483bfdf7.chunk.js","mappings":"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","sources":["components/CastListItem/CastLiastItem.jsx","components/CastList/CastList.jsx","components/Error/Error.styled.jsx","components/Error/Eror.jsx","components/Loader/Loader.jsx","components/Notification/Notification.jsx","constants/STATUS.js","services/api.js"],"sourcesContent":["import defaultImg from 'not-found.jpg'\n\nfunction CastListItem({ character, name, profile_path}) {\n    const avatar = `https://image.tmdb.org/t/p/w200/${profile_path}`;\n    return (\n        <li>\n            <img src={profile_path ? avatar : defaultImg} alt={name} width=\"200\"/>  \n            <p>{name}</p>\n            <p>Character: {character}</p>\n        </li>\n    )    \n}\n\nexport default CastListItem; ","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport { getCast } from \"services/api\";\nimport STATUS from \"constants/STATUS\";\nimport Error from \"components/Error/Eror\";\nimport Loader from \"components/Loader/Loader\";\nimport Notification from \"components/Notification/Notification\";\nimport CastListItem from \"components/CastListItem/CastLiastItem\";\n\nfunction CastList() {\n    const { movieId } = useParams(); \n    const [cast, setCast] = useState([]);\n    const [status, setStatus] = useState(STATUS.IDLE); \n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        setStatus(STATUS.PENDING)\n        getCast(movieId).then(data => {\n            setCast(data.cast);\n            setStatus(STATUS.RESOLVED);\n        }).catch(error => {\n            setError('Oops! Something went wrong. Try again.');\n            setStatus(STATUS.REJECTED);\n        })\n    }, [movieId])\n    \n    if (status === STATUS.RESOLVED) {\n        return (\n            <>\n                {cast.length ?\n                    <ul>\n                        {cast.map(({cast_id, character, name, profile_path}) => \n                            <CastListItem \n                                key={cast_id}\n                                character={character}\n                                name={name}\n                                profile_path={profile_path} />\n                        )}             \n                    </ul> \n                : <Notification>Sorry! We don't have cast information for this movie.</Notification>} \n            </>\n        )\n    }\n   \n    if (status === STATUS.PENDING) {\n        return <Loader/>\n    }\n\n    if (status === STATUS.REJECTED) {\n        return <Error>{error}</Error>\n    }\n}\n\nexport default CastList; ","import styled from '@emotion/styled' \n\nexport const ErrorContainer = styled.div`\n    display:flex; \n    flex-direction: column;\n    align-items: center; \n    text-align: center;\n    justify-content: center;\n    padding: 60px; \n    font-size: 30px; \n    font-weight: 500;\n    color: ${({ theme }) => theme.colors.darkbue};\n    \n\n    &>svg {\n        width: 80px; \n        height: 80px; \n        margin-bottom: 20px;\n        fill: ${({ theme }) => theme.colors.accentColor};\n    }\n\n`","import { PiMaskSadDuotone } from \"react-icons/pi\";\nimport {ErrorContainer} from './Error.styled'\n\nfunction Error({ children }) {\n    return (\n        <ErrorContainer>\n            <PiMaskSadDuotone />\n            {children}\n        </ErrorContainer>\n    )\n}\n\nexport default Error;","import {ThreeDots } from 'react-loader-spinner';\n\nfunction Loader() {\n    return (                \n        <ThreeDots color=\"#c24d2c\"/>    \n    )\n}\n\nexport default Loader;","import { PiMaskSadDuotone } from \"react-icons/pi\";\n\nfunction Notification({ children }) {\n    return (\n        <div>\n            <PiMaskSadDuotone />\n            {children}\n        </div>\n    )\n}\n\nexport default  Notification;","export const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n}\n\nexport default STATUS;\n\n","const API_KEY = '8ee92906979787c07710c6746d1a8fbe';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport function getTrendingMovies() {\n    return  fetch(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`)\n    .then(response => response.json())\n}\n\nexport function getDetails(id) {\n    return fetch(`${BASE_URL}/movie/${id}?language=en-US&api_key=${API_KEY}`)\n    .then(response => response.json())\n}\n\nexport function getCast(id) {\n    return fetch(`${BASE_URL}/movie/${id}/credits?language=en-US&api_key=${API_KEY}`)\n    .then(response => response.json())\n}\n\nexport function getReviews(id) {\n    return fetch(`${BASE_URL}/movie/${id}/reviews?language=en-US&api_key=${API_KEY}`)\n    .then(response => response.json())\n}\n\nexport function getMoviesByKeyword(searchQuery) {\n    return fetch(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`)\n        .then(response => response.json())\n  \n}"],"names":["_ref","character","name","profile_path","avatar","concat","_jsxs","children","_jsx","src","defaultImg","alt","width","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","STATUS","_useState4","status","setStatus","_useState5","_useState6","error","setError","useEffect","getCast","then","data","catch","_Fragment","length","map","cast_id","CastListItem","Notification","Loader","Error","ErrorContainer","styled","_templateObject","_taggedTemplateLiteral","theme","colors","darkbue","_ref2","accentColor","PiMaskSadDuotone","ThreeDots","color","IDLE","PENDING","RESOLVED","REJECTED","API_KEY","BASE_URL","getTrendingMovies","fetch","response","json","getDetails","id","getReviews","getMoviesByKeyword","searchQuery"],"sourceRoot":""}